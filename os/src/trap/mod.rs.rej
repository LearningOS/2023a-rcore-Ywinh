diff a/os/src/trap/mod.rs b/os/src/trap/mod.rs	(rejected hunks)
@@ -60,12 +61,19 @@ pub fn trap_handler() -> ! {
     let cx = current_trap_cx();
     let scause = scause::read(); // get trap cause
     let stval = stval::read(); // get extra value
-    // trace!("into {:?}", scause.cause());
+                               // trace!("into {:?}", scause.cause());
     match scause.cause() {
         Trap::Exception(Exception::UserEnvCall) => {
             // jump to next instruction anyway
             cx.sepc += 4;
             // get system call return value
+            //update task_syscall_times
+            let mut inner = TASK_MANAGER.inner.exclusive_access();
+            let current = inner.current_task;
+            inner.tasks[current].task_syscall_times[cx.x[17]] += 1;
+            //这个地方必须先drop
+            drop(inner);
+
             cx.x[10] = syscall(cx.x[17], [cx.x[10], cx.x[11], cx.x[12]]) as usize;
         }
         Trap::Exception(Exception::StoreFault)
